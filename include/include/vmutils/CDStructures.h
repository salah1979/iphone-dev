/*
 *     Generated by class-dump 3.1.1.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2006 by Steve Nygard.
 */

struct DISK_TABLE_INFO {
    unsigned long dti_first_page;
    unsigned long dti_page_count;
    unsigned long dti_object_count;
};

struct DISK_SYMBOL_HEADER_BLOCK {
    char dshb_id[32];
    short dshb_page_size;
    unsigned long dshb_hash_page;
    unsigned int dshb_root_mte;
    unsigned long dshb_mod_date;
    struct DISK_TABLE_INFO dshb_frte;
    struct DISK_TABLE_INFO dshb_rte;
    struct DISK_TABLE_INFO dshb_mte;
    struct DISK_TABLE_INFO dshb_cmte;
    struct DISK_TABLE_INFO dshb_cvte;
    struct DISK_TABLE_INFO dshb_csnte;
    struct DISK_TABLE_INFO dshb_clte;
    struct DISK_TABLE_INFO dshb_ctte;
    struct DISK_TABLE_INFO dshb_tte;
    struct DISK_TABLE_INFO dshb_nte;
    struct DISK_TABLE_INFO dshb_tinfo;
    struct DISK_TABLE_INFO dshb_fite;
    struct DISK_TABLE_INFO dshb_const;
    unsigned int dshb_file_creator;
    unsigned int dshb_file_type;
};

struct DISK_TABLE_INFO_v32 {
    unsigned short _field1;
    unsigned short _field2;
    unsigned long _field3;
};

struct FILE_REFERENCE {
    unsigned int fref_frte_index;
    long fref_offset;
};

struct FILE_REFERENCE_v32 {
    unsigned short _field1;
    long _field2;
};

struct MODULES_TABLE_ENTRY {
    unsigned short mte_rte_index;
    long mte_res_offset;
    long mte_size;
    char mte_kind;
    char mte_scope;
    unsigned int mte_parent;
    struct FILE_REFERENCE mte_imp_fref;
    long mte_imp_end;
    unsigned int mte_nte_index;
    unsigned int mte_cmte_index;
    unsigned int mte_cvte_index;
    unsigned int mte_clte_index;
    unsigned int mte_ctte_index;
    unsigned int mte_csnte_idx_1;
    unsigned int mte_csnte_idx_2;
};

struct RESOURCE_TABLE_ENTRY {
    unsigned int _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned long _field6;
};

struct STORAGE_CLASS_ADDRESS {
    char sca_kind;
    char sca_class;
    long sca_offset;
};

struct TracebackTbl {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct _NSZone;

struct __sFILEX;

struct ar_hdr {
    char _field1[16];
    char _field2[12];
    char _field3[6];
    char _field4[6];
    char _field5[8];
    char _field6[10];
    char _field7[2];
};

struct backtraceMagicNumbers {
    struct _NSRange sigTrampRange;
    unsigned int signal_pc_offset;
    unsigned int signal_sp_offset;
};

struct dyld_all_image_infos {
    unsigned int version;
    unsigned int infoArrayCount;
    struct dyld_image_info *infoArray;
    void *notification;
    _Bool processDetachedFromSharedRegion;
};

struct dyld_image_info;

struct image {
    char *_field1;
    unsigned long _field2;
    struct mach_header *_field3;
    unsigned long _field4;
    char *_field5;
};

struct load_command {
    unsigned int _field1;
    unsigned int _field2;
};

struct mach_header {
    unsigned int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct mach_header_64 {
    unsigned int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

union CONTAINED_LABELS_TABLE_ENTRY {
    struct {
        unsigned int _field1;
        struct FILE_REFERENCE _field2;
    } clte_file_;
    struct {
        unsigned int mte_index;
        unsigned int mte_offset;
        unsigned int nte_index;
        short file_delta;
        short scope;
    } clte_;
    unsigned int clte_end_of_list;
};

union CONTAINED_MODULES_TABLE_ENTRY {
    struct {
        unsigned int _field1;
        unsigned int _field2;
    } cmte_;
    unsigned int cmte_end_of_list;
};

union CONTAINED_STATEMENTS_TABLE_ENTRY {
    struct {
        unsigned int _field1;
        struct FILE_REFERENCE _field2;
    } csnte_file_;
    struct {
        unsigned int mte_index;
        short file_delta;
        unsigned int mte_offset;
    } csnte_;
    unsigned int csnte_end_of_list;
};

union CONTAINED_TYPES_TABLE_ENTRY {
    struct {
        unsigned int _field1;
        struct FILE_REFERENCE _field2;
    } ctte_file_;
    struct {
        unsigned int tte_index;
        unsigned int nte_index;
        short file_delta;
    } ctte_;
    unsigned int ctte_end_of_list;
};

typedef struct {
    unsigned int change;
    struct FILE_REFERENCE fref;
} CDAnonymousStruct4;

union CONTAINED_VARIABLES_TABLE_ENTRY {
    CDAnonymousStruct4 cvte_file_;
    struct {
        unsigned int tte_index;
        unsigned int nte_index;
        short file_delta;
        char scope;
        char la_size;
        union {
            struct STORAGE_CLASS_ADDRESS location;
            struct {
                char la[13];
                char la_kind;
                char la_xxxx;
            } lastruct;
            struct {
                long big_la;
                char big_la_kind;
            } biglastruct;
        } address;
    } cvte_;
    unsigned int cvte_end_of_list;
};

union FILE_REFERENCE_TABLE_ENTRY {
    struct {
        unsigned int name_entry;
        unsigned int nte_index;
        long mod_date;
    } frte_file_;
    struct {
        unsigned int mte_index;
        long file_offset;
    } frte_;
    unsigned int frte_end_of_list;
};

union FRTE_INDEX_TABLE_ENTRY {
    struct {
        unsigned int _field1;
        unsigned int _field2;
    } fite_;
    unsigned int fite_end_of_list;
};

struct pagebuff {
    union {
        char PAGE_DATA[1];
        union CONTAINED_VARIABLES_TABLE_ENTRY CVTEinPage[1];
        union FILE_REFERENCE_TABLE_ENTRY FRTEinPage[1];
        struct MODULES_TABLE_ENTRY MTEinPage[1];
        union CONTAINED_MODULES_TABLE_ENTRY CMTEinPage[1];
        union CONTAINED_LABELS_TABLE_ENTRY CLTEinPage[1];
        union CONTAINED_TYPES_TABLE_ENTRY CTTEinPage[1];
        union CONTAINED_STATEMENTS_TABLE_ENTRY CSNTEinPage[1];
        union FRTE_INDEX_TABLE_ENTRY FITEinPage[1];
    } _field1;
};

struct samplingStatistics {
    id _field1;
    unsigned int _field2;
    unsigned int _field3;
    double _field4;
};

struct section {
    char _field1[16];
    char _field2[16];
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
};

struct section_64 {
    char _field1[16];
    char _field2[16];
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
};

struct segment_command {
    unsigned int _field1;
    unsigned int _field2;
    char _field3[16];
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    int _field9;
    unsigned int _field10;
    unsigned int _field11;
};

struct segment_command_64 {
    unsigned int _field1;
    unsigned int _field2;
    char _field3[16];
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    int _field8;
    int _field9;
    unsigned int _field10;
    unsigned int _field11;
};

struct stabInfo {
    unsigned int _field1;
    id _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct stat {
    int st_dev;
    unsigned int st_ino;
    unsigned short st_mode;
    unsigned short st_nlink;
    unsigned int st_uid;
    unsigned int st_gid;
    int st_rdev;
    struct timespec st_atimespec;
    struct timespec st_mtimespec;
    struct timespec st_ctimespec;
    long long st_size;
    long long st_blocks;
    int st_blksize;
    unsigned int st_flags;
    unsigned int st_gen;
    int st_lspare;
    long long st_qspare[2];
};

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
} CDAnonymousStruct3;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
} CDAnonymousStruct1;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int *_field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7[2];
    struct {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned int _field4;
    } _field8[0];
} CDAnonymousStruct2;


