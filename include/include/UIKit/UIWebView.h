/*
 *     Generated by class-dump 3.1.1.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2006 by Steve Nygard.
 */

#import <UIKit/UITiledView.h>

#import "UIKeyboardInputProtocol.h"

@class DOMHTMLElement, DOMNode, DOMNode<UIFormControl>, NSTimer, UIAutoscrollTimer, UIInformalDelegate, UITextLoupe, UITextTraits, UITextView, UIView, WebPDFView, WebView;

@interface UIWebView : UITiledView <UIKeyboardInput>
{
    struct WKWindow *_window;
    WebView *_webView;
    UITextView *m_parentTextView;
    id _delegate;
    id _textSuggestionDelegate;
    id _editingDelegate;
    float _doubleTapDelay;
    struct CGRect _doubleTapRect;
    struct CGRect _mainDocumentDoubleTapRect;
    float _minimumScalesToFitScale;
    struct CGPoint _scrollPoint;
    struct CGPoint _doubleTapStartPosition;
    double _doubleTapStartTime;
    struct CGSize _pendingSize;
    int _textDomain;
    int _suggestionBarTextSize;
    UITextLoupe *_textLoupe;
    DOMHTMLElement *_standaloneEditingElement;
    struct CGPoint _mouseDownPoint;
    double _mouseDownTime;
    UIAutoscrollTimer *_autoscrollTimer;
    struct __CFDictionary *_plugInViews;
    UITextTraits *_textTraits;
    struct {
        char isEdited;
        char isTransitioning;
        char zoomsFocusedFormControl;
        struct CGRect cachedBoundingBox;
        DOMNode<UIFormControl> *element;
        UIInformalDelegate *delegate;
    } _forms;
    struct {
        NSTimer *timer;
        struct CGPoint location;
        char isCancelled;
        char isDisplayingHighlight;
        char isGestureScrolling;
        struct CGPoint gestureScrollPoint;
        struct CGPoint gestureCurrentPoint;
        char hasAttemptedGestureScrolling;
        UIView *candidate;
        char forwardingGuard;
        SEL mouseUpForwarder;
        SEL mouseDraggedForwarder;
        DOMNode *element;
    } _interaction;
    struct {
        WebPDFView *view;
        NSTimer *timer;
    } _pdf;
    struct {
        struct CGSize size;
        float initialScale;
        float minimumScale;
        float maximumScale;
        char allowsUserScaling;
    } _viewportConfigurations[6];
    struct CGSize _minimumSize;
    int _documentType;
    float _documentScale;
    struct CGRect _documentBounds;
    int _enabledGestures;
    unsigned int _customConfigurations;
    unsigned int _webCoreNeedsSetNeedsDisplay:1;
    unsigned int _webCoreNeedsDraw:1;
    unsigned int _mouseDownCount;
    unsigned int _ignoresFocusingMouse:1;
    unsigned int _ignoresKeyEvents:1;
    unsigned int _autoresizes:1;
    unsigned int _scalesToFit:1;
    unsigned int _hasCustomScale:1;
    unsigned int _userScrolled:1;
    unsigned int _pageNeedsReset:1;
    unsigned int _hasScrollPoint:1;
    unsigned int _setNeedsDisplayWasForced:1;
    unsigned int _gesturesDisabled:1;
    unsigned int _doubleTapRectIsReplaced:1;
    unsigned int _standaloneEditableView:1;
    unsigned int _isFieldEditor:1;
    unsigned int _widgetEditingView:1;
    unsigned int _mouseDragged:1;
    unsigned int _textLoupeActive:1;
    unsigned int _mouseReentrancyGuard:1;
    unsigned int _smoothsFonts:1;
    unsigned int _isShowingFullScreenPlugIn:1;
    unsigned int _isSettingRedrawFrame:1;
}

+ (Class)layerClass;	// IMP=0x324005f4
- (void)_WAKViewSizeDidChange:(id)fp8;	// IMP=0x324014c4
- (struct CGPoint)_centeredScrollPointForPoint:(struct CGPoint)fp8 scale:(float)fp16;	// IMP=0x324033fc
- (void)_clearDoubleTapRect;	// IMP=0x32400b1c
- (void)_didMoveFromWindow:(id)fp8 toWindow:(id)fp12;	// IMP=0x32401f2c
- (void)_didScroll;	// IMP=0x324025b0
- (float)_doubleTapScaleForSize:(float)fp8 isWidth:(BOOL)fp12;	// IMP=0x32403754
- (struct CGPoint)_doubleTapScrollPointForRect:(struct CGRect)fp8 scale:(float)fp24 event:(struct __GSEvent *)fp28;	// IMP=0x32403524
- (id)_doubleTapSpeedFromDefaults;	// IMP=0x3240061c
- (BOOL)_doubleTapZoomToRect:(struct CGRect)fp8 scale:(float)fp24 fromEvent:(struct __GSEvent *)fp28;	// IMP=0x32403824
- (BOOL)_isSubviewOfPlugInView:(id)fp8;	// IMP=0x3240282c
- (void)_notifyPlugInViewsOfScaleChange;	// IMP=0x32403298
- (id)_parentTextView;	// IMP=0x32404724
- (void)_resetForNewPage;	// IMP=0x324018bc
- (void)_reshapePlugInViews;	// IMP=0x32403398
- (id)_responderForBecomeFirstResponder;	// IMP=0x324044ec
- (void)_restoreScrollPointForce:(BOOL)fp8;	// IMP=0x32401754
- (void)_sendInternalEvent:(struct __GSEvent *)fp8;	// IMP=0x32402684
- (void)_setDocumentScale:(float)fp8;	// IMP=0x324009b4
- (void)_setDocumentType:(int)fp8;	// IMP=0x32400ac0
- (void)_setParentTextView:(id)fp8;	// IMP=0x3240472c
- (void)_setScrollerOffset:(struct CGPoint)fp8;	// IMP=0x3240164c
- (void)_updateSize;	// IMP=0x32406ba8
- (BOOL)_updatesScroller;	// IMP=0x32401628
- (struct CGPoint)_viewportLocationForEvent:(struct __GSEvent *)fp8;	// IMP=0x32402740
- (void)_webCoreNeedsDisplay;	// IMP=0x32402058
- (unsigned int)becomeFirstResponder;	// IMP=0x32404190
- (BOOL)canBecomeFirstResponder;	// IMP=0x32404124
- (BOOL)canResignFirstResponder;	// IMP=0x3240415c
- (BOOL)cancelMouseTracking;	// IMP=0x32402550
- (struct CGRect)caretRect;	// IMP=0x32405a24
- (unsigned short)characterAfterCaretSelection;	// IMP=0x32404b88
- (unsigned short)characterBeforeCaretSelection;	// IMP=0x32404b34
- (unsigned short)characterInRelationToCaretSelection:(int)fp8;	// IMP=0x32404ad8
- (void)clearPlaceholder;	// IMP=0x324048ac
- (void)clickAfterDelay:(float)fp8;	// IMP=0x324029c8
- (struct CGRect)convertCaretRect:(struct CGRect)fp8;	// IMP=0x32405b1c
- (void)dealloc;	// IMP=0x3240067c
- (void)defaultMouseDragged:(struct __GSEvent *)fp8;	// IMP=0x32402ccc
- (void)defaultMouseUp:(struct __GSEvent *)fp8;	// IMP=0x32402d0c
- (void)deleteBackward;	// IMP=0x32404744
- (void)didRemovePlugInView:(id)fp8;	// IMP=0x32405d28
- (struct CGRect)documentBounds;	// IMP=0x32401544
- (void)doubleTap:(struct __GSEvent *)fp8;	// IMP=0x32403bc0
- (float)doubleTapDelay;	// IMP=0x32402e54
- (struct CGRect)doubleTapRect;	// IMP=0x32404010
- (BOOL)doubleTapRectIsReplaced;	// IMP=0x32404028
- (void)drawRect:(struct CGRect)fp8;	// IMP=0x32402360
- (int)enabledGestures;	// IMP=0x3240153c
- (void)ensureSelection;	// IMP=0x324045a8
- (void)expandSelectionToStartOfWordContainingCaretSelection;	// IMP=0x32404fc4
- (void)flushDirtyRects;	// IMP=0x32402080
- (struct __GSFont *)fontForCaretSelection;	// IMP=0x32404bdc
- (void)forwardInvocation:(id)fp8;	// IMP=0x32405e18
- (void)gestureChanged:(struct __GSEvent *)fp8;	// IMP=0x32402ffc
- (void)gestureEnded:(struct __GSEvent *)fp8;	// IMP=0x324031d4
- (void)gestureStarted:(struct __GSEvent *)fp8;	// IMP=0x32402f10
- (BOOL)hasSelection;	// IMP=0x3240534c
- (id)hitTest:(struct CGPoint)fp8 forEvent:(struct __GSEvent *)fp16;	// IMP=0x32402894
- (id)implementationWebView;	// IMP=0x32405b4c
- (id)initWithFrame:(struct CGRect)fp8;	// IMP=0x324073b4
- (float)initialScale;	// IMP=0x324060d8
- (void)insertText:(id)fp8;	// IMP=0x32404788
- (float)integralScaleForScale:(float)fp8;	// IMP=0x32405fa4
- (BOOL)isFieldEditor;	// IMP=0x32404734
- (BOOL)isProxyFor:(id)fp8;	// IMP=0x32405b9c
- (BOOL)isShowingFullScreenPlugInUI;	// IMP=0x32405d5c
- (BOOL)isShowingPlaceholder;	// IMP=0x32405b44
- (BOOL)isStandaloneEditableView;	// IMP=0x32404050
- (BOOL)isWidgetEditingView;	// IMP=0x324040c0
- (void)keyDown:(struct __GSEvent *)fp8;	// IMP=0x32402ea0
- (void)keyUp:(struct __GSEvent *)fp8;	// IMP=0x32402e5c
- (id)keyboardInputOverlayContainer:(id)fp8;	// IMP=0x32405b50
- (id)keyboardInputView;	// IMP=0x32405b40
- (void)layoutBeforeDraw;	// IMP=0x32406998
- (void)layoutSubviews;	// IMP=0x32402198
- (void)loadHTMLString:(id)fp8 baseURL:(id)fp12;	// IMP=0x324008c8
- (void)loadRequest:(id)fp8;	// IMP=0x32400914
- (BOOL)makeWKFirstResponder;	// IMP=0x32404524
- (void)markCurrentWordForAutoCorrection:(id)fp8 correction:(id)fp12;	// IMP=0x324054fc
- (id)markedText;	// IMP=0x32404a40
- (id)methodSignatureForSelector:(SEL)fp8;	// IMP=0x32405ed4
- (float)minimumScale;	// IMP=0x32406038
- (float)minimumScaleForMinimumSize:(struct CGSize)fp8;	// IMP=0x324071dc
- (void)mouseDown:(struct __GSEvent *)fp8;	// IMP=0x32402a70
- (void)moveBackward:(unsigned int)fp8;	// IMP=0x3240557c
- (void)moveForward:(unsigned int)fp8;	// IMP=0x324055d0
- (id)previousNGrams:(unsigned int)fp8;	// IMP=0x324050c8
- (BOOL)rangeAtSentenceStart:(id)fp8;	// IMP=0x324054a0
- (struct CGRect)rectContainingCaretSelection;	// IMP=0x32404c6c
- (void)redrawScaledDocument;	// IMP=0x324061bc
- (void)release;	// IMP=0x32400820
- (void)replaceCurrentWordWithText:(id)fp8;	// IMP=0x324047bc
- (BOOL)resignFirstResponder;	// IMP=0x32404320
- (void)selectAll;	// IMP=0x32405624
- (BOOL)selectionAtDocumentStart;	// IMP=0x324053a4
- (BOOL)selectionAtSentenceStart;	// IMP=0x324053f8
- (BOOL)selectionAtWordStart;	// IMP=0x3240544c
- (struct _NSRange)selectionRange;	// IMP=0x324052e0
- (void)setAllowsUserScaling:(BOOL)fp8 forDocumentTypes:(int)fp12;	// IMP=0x324015f8
- (void)setAutoresizes:(BOOL)fp8;	// IMP=0x3240155c
- (void)setCaretChangeListener:(id)fp8;	// IMP=0x324059d0
- (void)setDelegate:(id)fp8;	// IMP=0x324008c0
- (void)setDoubleTapDelay:(float)fp8;	// IMP=0x32402e4c
- (void)setDrawsBackground:(BOOL)fp8;	// IMP=0x32402500
- (void)setEnabledGestures:(int)fp8;	// IMP=0x324014ec
- (void)setFrame:(struct CGRect)fp8;	// IMP=0x32406768
- (void)setIgnoresFocusingMouse:(BOOL)fp8;	// IMP=0x32402580
- (void)setIgnoresKeyEvents:(BOOL)fp8;	// IMP=0x32402598
- (void)setInitialScale:(float)fp8 forDocumentTypes:(int)fp12;	// IMP=0x32401574
- (void)setIsStandaloneEditableView:(BOOL)fp8;	// IMP=0x32404038
- (void)setIsWidgetEditingView:(BOOL)fp8;	// IMP=0x324040a8
- (void)setMarkedText:(id)fp8;	// IMP=0x324048b4
- (void)setMaximumScale:(float)fp8 forDocumentTypes:(int)fp12;	// IMP=0x324015cc
- (void)setMinimumScale:(float)fp8 forDocumentTypes:(int)fp12;	// IMP=0x324015a0
- (void)setMinimumSize:(struct CGSize)fp8;	// IMP=0x32406458
- (void)setNeedsDisplay;	// IMP=0x324022f8
- (void)setNeedsDisplayInRect:(struct CGRect)fp8;	// IMP=0x32402264
- (void)setSmoothsFonts:(BOOL)fp8;	// IMP=0x324024e8
- (void)setStandaloneEditingElement:(id)fp8;	// IMP=0x32404060
- (void)setText:(id)fp8;	// IMP=0x32405670
- (void)setUserStyleSheetLocation:(id)fp8;	// IMP=0x32400960
- (void)setViewportSize:(struct CGSize)fp8 forDocumentTypes:(int)fp16;	// IMP=0x324063e8
- (void)setWKWindowIsSuspendedWindow:(BOOL)fp8;	// IMP=0x32405ba4
- (void)setupPlaceholderTextIfNeeded;	// IMP=0x324048b0
- (BOOL)spaceFollowsWordInRange:(id)fp8;	// IMP=0x3240506c
- (id)standaloneEditingElement;	// IMP=0x324040a0
- (void)takeTraitsFrom:(id)fp8;	// IMP=0x32405db8
- (id)text;	// IMP=0x324057a0
- (struct CGColor *)textColorForCaretSelection;	// IMP=0x32404c3c
- (id)textTraits;	// IMP=0x32405d6c
- (BOOL)tileDrawingEnabled;	// IMP=0x32401ff4
- (BOOL)updateKeyboardStateOnResponderChanges;	// IMP=0x324040d0
- (void)updateSelectionWithPoint:(struct CGPoint)fp8;	// IMP=0x324058ec
- (void)viewportConfigurationsDidChange:(unsigned int)fp8;	// IMP=0x32406e64
- (float)viewportHeight;	// IMP=0x32406544
- (float)viewportWidth;	// IMP=0x3240663c
- (id)webView;	// IMP=0x32400958
- (void)webView:(id)fp8 didCommitLoadForFrame:(id)fp12;	// IMP=0x32400efc
- (void)webView:(id)fp8 didHideFullScreenForPlugInView:(id)fp12;	// IMP=0x32405cb8
- (void)webView:(id)fp8 didReceiveDocTypeForFrame:(id)fp12;	// IMP=0x32401388
- (void)webView:(id)fp8 didReceiveViewportArguments:(id)fp12 forFrame:(id)fp16;	// IMP=0x32400b58
- (id)webView:(id)fp8 plugInViewWithArguments:(id)fp12 fromPlugInPackage:(id)fp16;	// IMP=0x32405bc4
- (void)webView:(id)fp8 restoreStateFromHistoryItem:(id)fp12 forFrame:(id)fp16 force:(BOOL)fp20;	// IMP=0x32401d5c
- (void)webView:(id)fp8 saveStateToHistoryItem:(id)fp12 forFrame:(id)fp16;	// IMP=0x324019b4
- (BOOL)webView:(id)fp8 shouldScrollToPoint:(struct CGPoint)fp12 forFrame:(id)fp20;	// IMP=0x32401de8
- (void)webView:(id)fp8 willShowFullScreenForPlugInView:(id)fp12;	// IMP=0x32405ca8
- (id)wordContainingCaretSelection;	// IMP=0x32404ef0
- (id)wordInRange:(id)fp8;	// IMP=0x32404f68
- (int)wordOffsetInRange:(id)fp8;	// IMP=0x32405010
- (id)wordRangeContainingCaretSelection;	// IMP=0x32404d58
- (void)zoomToScale:(float)fp8;	// IMP=0x3240333c

@end

