/*
 *     Generated by class-dump 3.1.1.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2006 by Steve Nygard.
 */

#import <Message/Connection.h>

@class InvocationQueue, NSMutableData, NSMutableSet, NSString;

@interface IMAPConnection : Connection
{
    id _delegate;
    id <IMAPMailboxListFilter> _mailboxListFilter;
    unsigned int _delegateShouldHandleUntaggedResponse:1;
    unsigned int _delegateDidReceiveResponse:1;
    unsigned int _delegateDidFinishSelect:1;
    unsigned int _delegateDidDisconnect:1;
    unsigned int _capabilityFlags:10;
    unsigned int _capabilitiesAreFresh:1;
    unsigned int _gotBadResponse:1;
    int _tag;
    double _connectTime;
    unsigned int _connectionState:3;
    NSString *_separatorChar;
    NSString *_selectedMailbox;
    NSMutableSet *_capabilities;
    unsigned int _commandNumber;
    NSMutableData *_data;
    unsigned int _readBufferSize;
    double _expirationTime;
    unsigned int _idleCommandSequenceNumber;
    InvocationQueue *_streamEventQueue;
}

+ (void)initialize;	// IMP=0x30b4abb1
+ (void)setReadSizeParameters;	// IMP=0x30b49ec5
- (id)_copyNextServerResponseForCommand:(CDAnonymousStruct7 *)fp8;	// IMP=0x30b4883d
- (id)_copyNextTaggedOrContinuationResponseForCommand:(CDAnonymousStruct7 *)fp8;	// IMP=0x30b488ad
- (BOOL)_doBasicConnectionUsingAccount:(id)fp8;	// IMP=0x30b48301
- (id)_doListCommand:(int)fp8 withReference:(id)fp12 mailboxName:(id)fp16 options:(int)fp20;	// IMP=0x30b4de7d
- (BOOL)_doUidFetchWithRange:(CDAnonymousStruct2)fp8 arguments:(id)fp16 validateMessage:(BOOL)fp20 responses:(id)fp24;	// IMP=0x30b49fb5
- (id)_errorForResponse:(id)fp8 commandParams:(CDAnonymousStruct7 *)fp12;	// IMP=0x30b48a4d
- (id)_headersToFetchIncludingThoseRequiredForRouting:(BOOL)fp8 withRecipients:(BOOL)fp12;	// IMP=0x30b4c4e9
- (id)_responseFromSendingCommand:(CDAnonymousStruct7 *)fp8 andPossiblyCreateMailbox:(id)fp12;	// IMP=0x30b499a5
- (unsigned int)_sendCommands:(CDAnonymousStruct7 *)fp8 count:(unsigned int)fp12 response:(id *)fp16;	// IMP=0x30b4bee9
- (BOOL)_sendMailboxCommand:(int)fp8 withArguments:(id)fp12;	// IMP=0x30b497f5
- (BOOL)_tryConnectionUsingAccount:(id)fp8;	// IMP=0x30b484dd
- (BOOL)appendData:(id)fp8 toMailboxNamed:(id)fp12 flags:(id)fp16 dateReceived:(id)fp20 newMessageInfo:(id *)fp24;	// IMP=0x30b4d235
- (BOOL)authenticateUsingAccount:(id)fp8;	// IMP=0x30b48cd1
- (BOOL)authenticateUsingAccount:(id)fp8 authenticator:(id)fp12;	// IMP=0x30b4cd01
- (id)capabilities;	// IMP=0x30b48bf5
- (void)close;	// IMP=0x30b49035
- (BOOL)closeAndLogout;	// IMP=0x30b490c5
- (BOOL)connectUsingAccount:(id)fp8;	// IMP=0x30b48591
- (int)connectionState;	// IMP=0x30b486cd
- (BOOL)copyUids:(id)fp8 toMailboxNamed:(id)fp12 newMessageInfo:(id *)fp16;	// IMP=0x30b4d421
- (BOOL)createMailbox:(id)fp8;	// IMP=0x30b4d85d
- (void)dealloc;	// IMP=0x30b48059
- (id)delegate;	// IMP=0x30b480b5
- (BOOL)deleteMailbox:(id)fp8;	// IMP=0x30b4d7d5
- (BOOL)deleteMessagesOlderThanNumberOfDays:(int)fp8;	// IMP=0x30b4ac85
- (id)description;	// IMP=0x30b4a7ad
- (void)disconnect;	// IMP=0x30b486b5
- (void)disconnectAndNotifyDelegate:(BOOL)fp8;	// IMP=0x30b4d14d
- (BOOL)examineMailbox:(id)fp8;	// IMP=0x30b4da35
- (BOOL)expunge;	// IMP=0x30b4960b
- (BOOL)expungeUids:(id)fp8;	// IMP=0x30b4bd71
- (id)fetchArgumentForMessageSkeletonsWithTo:(BOOL)fp8;	// IMP=0x30b49aed
- (id)fetchHeadersForUid:(unsigned long)fp8;	// IMP=0x30b49c75
- (void)fetchQuotaRootNamesForMailboxes:(id)fp8;	// IMP=0x30b4de49
- (void)fetchStatusForMailboxes:(id)fp8 args:(id)fp12;	// IMP=0x30b4de19
- (void)fetchTotalSize:(unsigned long long *)fp8 andMessageCount:(unsigned int *)fp12;	// IMP=0x30b49b19
- (void)finishIdle;	// IMP=0x30b49565
- (unsigned int)getMailboxIDForUID:(unsigned int)fp8;	// IMP=0x30b4988d
- (BOOL)getQuotaForRootName:(id)fp8;	// IMP=0x30b496a9
- (void)handleBytesAvailable;	// IMP=0x30b492b1
- (void)handleStreamEvent:(id)fp8;	// IMP=0x30b49205
- (id)init;	// IMP=0x30b47fe9
- (BOOL)isIdle;	// IMP=0x30b495fd
- (BOOL)isValid;	// IMP=0x30b48821
- (id)listingForMailbox:(id)fp8 options:(int)fp12;	// IMP=0x30b48f8d
- (void)lock;	// IMP=0x30b4a799
- (BOOL)loginWithAccount:(id)fp8 password:(id)fp12;	// IMP=0x30b4cbc9
- (BOOL)logout;	// IMP=0x30b48e81
- (id)mailboxListFilter;	// IMP=0x30b48135
- (id)messageSetForNumbers:(id)fp8 range:(struct _NSRange)fp12;	// IMP=0x30b4a3a1
- (id)messageSetForNumbers:(id)fp8 range:(struct _NSRange)fp12 maxTokens:(int)fp20 indexOfLastNumber:(int *)fp24;	// IMP=0x30b4a17d
- (id)messageSetForRange:(CDAnonymousStruct2)fp8;	// IMP=0x30b4a119
- (void)noop;	// IMP=0x30b48c35
- (id)parenthesizedStringWithObjects:(id)fp8;	// IMP=0x30b4a3d5
- (unsigned int)readBufferSize;	// IMP=0x30b49eb1
- (BOOL)renameMailbox:(id)fp8 toMailbox:(id)fp12;	// IMP=0x30b4d6cd
- (void)resetIdle;	// IMP=0x30b4c63d
- (void)scheduleIdle;	// IMP=0x30b4c63f
- (void)scheduleIdleResetAfterDelay:(id)fp8;	// IMP=0x30b494f5
- (int)searchCount:(id)fp8;	// IMP=0x30b4b647
- (id)searchIDSet:(id)fp8 forTerms:(id)fp12 success:(char *)fp16;	// IMP=0x30b4b61d
- (id)searchUidSet:(id)fp8 forNewMessageIDs:(id)fp12;	// IMP=0x30b4b66f
- (id)searchUidSet:(id)fp8 forTerms:(id)fp12 success:(char *)fp16;	// IMP=0x30b4b5f5
- (BOOL)selectMailbox:(id)fp8;	// IMP=0x30b4da43
- (id)selectedMailbox;	// IMP=0x30b496a5
- (id)separatorChar;	// IMP=0x30b48f05
- (id)serverPathPrefix;	// IMP=0x30b4ba49
- (void)setDelegate:(id)fp8;	// IMP=0x30b480b9
- (void)setMailboxListFilter:(id)fp8;	// IMP=0x30b48139
- (void)setReadBufferSize:(unsigned int)fp8;	// IMP=0x30b49ec1
- (void)setReadBufferSizeFromElapsedTime:(double)fp8 bytesRead:(unsigned int)fp16;	// IMP=0x30b49dcd
- (void)startIdle;	// IMP=0x30b4936d
- (BOOL)startTLSForAccount:(id)fp8;	// IMP=0x30b4a535
- (id)statusForMailbox:(id)fp8 args:(id)fp12;	// IMP=0x30b4da51
- (BOOL)storeFlags:(id)fp8 state:(BOOL)fp12 forUids:(id)fp16;	// IMP=0x30b4bb99
- (BOOL)subscribeMailbox:(id)fp8;	// IMP=0x30b4d655
- (id)subscribedListingForMailbox:(id)fp8 options:(int)fp12;	// IMP=0x30b48fe1
- (BOOL)supportsCapability:(int)fp8;	// IMP=0x30b4c641
- (void)unselect;	// IMP=0x30b49145
- (BOOL)unsubscribeMailbox:(id)fp8;	// IMP=0x30b4d5dd

@end

