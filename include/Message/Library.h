/*
 *     Generated by class-dump 3.1.1.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2006 by Steve Nygard.
 */

#import "NSObject.h"

@interface Library : NSObject
{
}

+ (id)UIDsToDeleteInMailbox:(id)fp8;	// IMP=0x30bb0b49
+ (BOOL)_writeEmlxFile:(id)fp8 withBodyData:(id)fp12;	// IMP=0x30babf41
+ (unsigned int)accessSequenceNumber;	// IMP=0x30bac2d1
+ (id)accountForMessage:(id)fp8;	// IMP=0x30bac835
+ (id)addMessages:(id)fp8 withMailbox:(id)fp12 fetchBodies:(BOOL)fp16 newMessagesByOldMessage:(id)fp20;	// IMP=0x30bac13d
+ (id)addMessages:(id)fp8 withMailbox:(id)fp12 fetchBodies:(BOOL)fp16 newMessagesByOldMessage:(id)fp20 remoteIDs:(id)fp24 setFlags:(unsigned long long)fp28 clearFlags:(unsigned long long)fp36 messageFlagsForMessages:(id)fp44 copyFiles:(BOOL)fp48 progressDelegate:(id)fp52 addPOPUIDs:(BOOL)fp56 dataByMessage:(id)fp60;	// IMP=0x30bb2a5d
+ (id)allUIDsInMailbox:(id)fp8;	// IMP=0x30bb0b71
+ (id)attachmentsDirectoryForLibraryID:(unsigned int)fp8 mailboxID:(unsigned int)fp12;	// IMP=0x30bacb3d
+ (id)bodyDataAtPath:(id)fp8 headerData:(id *)fp12;	// IMP=0x30baeea5
+ (id)bodyDataForMessage:(id)fp8;	// IMP=0x30bacd39
+ (id)bodyDataForMessage:(id)fp8 andHeaderDataIfReadilyAvailable:(id *)fp12;	// IMP=0x30bacd1d
+ (id)bodyDataForMessage:(id)fp8 andHeaderDataIfReadilyAvailable:(id *)fp12 isComplete:(char *)fp16;	// IMP=0x30bb0f79
+ (void)cleanOldDatabases;	// IMP=0x30bad315
+ (void)closeDatabaseConnections;	// IMP=0x30baf38d
+ (void)commit;	// IMP=0x30babb4d
+ (void)compactMailbox:(id)fp8;	// IMP=0x30bb24d5
+ (void)compactMessages:(id)fp8;	// IMP=0x30bac9bd
+ (void)compactMessages:(id)fp8 permanently:(BOOL)fp12;	// IMP=0x30bb2719
+ (id)dataConsumerForMessage:(id)fp8;	// IMP=0x30bacc95
+ (id)dataConsumerForMessage:(id)fp8 isPartial:(BOOL)fp12;	// IMP=0x30bacc49
+ (id)dataConsumerForMessage:(id)fp8 part:(id)fp12;	// IMP=0x30bacba9
+ (id)dataConsumerForMessage:(id)fp8 part:(id)fp12 incomplete:(BOOL)fp16;	// IMP=0x30bacbf5
+ (id)dataForMimePart:(id)fp8 isComplete:(char *)fp12;	// IMP=0x30bb1f8f
+ (id)dataPathForMessage:(id)fp8;	// IMP=0x30bb1e61
+ (id)dataPathForMessage:(id)fp8 part:(id)fp12;	// IMP=0x30bb1f81
+ (id)dataPathForMessage:(id)fp8 type:(int)fp12;	// IMP=0x30bb22bd
+ (id)defaultDatabasePath;	// IMP=0x30bad29d
+ (void)deleteMailboxes:(id)fp8;	// IMP=0x30baf715
+ (void)deletePOPUID:(id)fp8 inMailbox:(id)fp12;	// IMP=0x30baf8dd
+ (unsigned int)deletedCountForMailbox:(id)fp8;	// IMP=0x30bac5d1
+ (id)deletedUIDsInMailbox:(id)fp8;	// IMP=0x30bb0b5d
+ (id)duplicateMessages:(id)fp8 newRemoteIDs:(id)fp12 forMailbox:(id)fp16 setFlags:(unsigned long long)fp20 clearFlags:(unsigned long long)fp28 messageFlagsForMessages:(id)fp36 createNewCacheFiles:(BOOL)fp40;	// IMP=0x30bac17d
+ (id)filterContiguousMessages:(id)fp8 forCriterion:(id)fp12 options:(unsigned int)fp16;	// IMP=0x30bacff9
+ (void)flagsChangedForMessages:(id)fp8 flags:(id)fp12 oldFlagsByMessage:(id)fp16;	// IMP=0x30bab7c9
+ (id)fullBodyDataForMessage:(id)fp8;	// IMP=0x30bacd51
+ (id)fullBodyDataForMessage:(id)fp8 andHeaderDataIfReadilyAvailable:(id *)fp12;	// IMP=0x30bb105d
+ (id)getDetailsForMessagesWithRemoteIDInRange:(struct _NSRange)fp8 fromMailbox:(id)fp16;	// IMP=0x30bb11c1
+ (BOOL)hasCacheFileForMessage:(id)fp8 directoryContents:(id)fp12;	// IMP=0x30bacd69
+ (BOOL)hasCacheFileForMessage:(id)fp8 part:(id)fp12 directoryContents:(id)fp16;	// IMP=0x30bb218d
+ (id)hiddenPOPUIDsInMailbox:(id)fp8;	// IMP=0x30bb0b85
+ (void)initialize;	// IMP=0x30babca9
+ (BOOL)initializeDatabase:(struct sqlite3 *)fp8;	// IMP=0x30badf45
+ (unsigned int)integerForQuery:(char *)fp8 withTextArgument:(id)fp12;	// IMP=0x30bb1675
+ (BOOL)isBusy;	// IMP=0x30bad2e1
+ (BOOL)isMessageContentsLocallyAvailable:(id)fp8;	// IMP=0x30bb0c99
+ (BOOL)libraryExists;	// IMP=0x30badb6d
+ (int)libraryStatus;	// IMP=0x30bb0b99
+ (id)mailboxUidForMessage:(id)fp8;	// IMP=0x30bac7b1
+ (id)mailboxUidForMessage:(id)fp8 lock:(BOOL)fp12;	// IMP=0x30bac769
+ (unsigned int)maximumRemoteIDForMailbox:(id)fp8;	// IMP=0x30bb13d9
+ (void)maybeCommitTransaction;	// IMP=0x30bafead
+ (id)messageWithLibraryID:(unsigned int)fp8;	// IMP=0x30bac701
+ (id)messageWithLibraryID:(unsigned int)fp8 options:(unsigned int)fp12;	// IMP=0x30bb10a9
+ (id)messageWithMessageID:(id)fp8;	// IMP=0x30bac631
+ (id)messageWithMessageID:(id)fp8 inMailbox:(id)fp12;	// IMP=0x30bac9d5
+ (id)messageWithRemoteID:(id)fp8 inRemoteMailbox:(id)fp12;	// IMP=0x30bb1479
+ (id)messagesForMailbox:(id)fp8 olderThanNumberOfDays:(int)fp12;	// IMP=0x30bac3d9
+ (id)messagesMatchingCriterion:(id)fp8 options:(unsigned int)fp12;	// IMP=0x30bacf85
+ (id)messagesMatchingCriterion:(id)fp8 options:(unsigned int)fp12 range:(struct _NSRange)fp16;	// IMP=0x30bacf09
+ (id)messagesMatchingQuery:(const char *)fp8 options:(unsigned int)fp12;	// IMP=0x30bac365
+ (void)messagesWereCompacted:(id)fp8 mailboxes:(id)fp12;	// IMP=0x30bac85d
+ (id)messagesWithMessageIDHeader:(id)fp8;	// IMP=0x30bac681
+ (id)messagesWithSummariesForMailbox:(id)fp8 range:(struct _NSRange)fp12;	// IMP=0x30baf5d1
+ (unsigned int)minimumRemoteIDForMailbox:(id)fp8;	// IMP=0x30bb1339
+ (unsigned int)nonDeletedCountForMailbox:(id)fp8;	// IMP=0x30bac5f1
+ (id)oldestMessageInMailbox:(id)fp8;	// IMP=0x30bb1589
+ (id)queryForCriterion:(id)fp8 options:(unsigned int)fp12;	// IMP=0x30baed55
+ (id)queryForCriterion:(id)fp8 options:(unsigned int)fp12 baseTable:(unsigned int)fp16;	// IMP=0x30bace35
+ (id)queryForCriterion:(id)fp8 options:(unsigned int)fp12 baseTable:(unsigned int)fp16 isSubquery:(BOOL)fp20;	// IMP=0x30baed7d
+ (id)queryForCriterion:(id)fp8 options:(unsigned int)fp12 baseTable:(unsigned int)fp16 isSubquery:(BOOL)fp20 range:(struct _NSRange)fp24;	// IMP=0x30bb4029
+ (id)queryForCriterion:(id)fp8 options:(unsigned int)fp12 range:(struct _NSRange)fp16;	// IMP=0x30bace55
+ (void)queueCommitForCurrentThread;	// IMP=0x30bab8c9
+ (void)queueCommitOnMainThread;	// IMP=0x30baba3d
+ (id)remoteStoreForMessage:(id)fp8;	// IMP=0x30bac7c9
+ (BOOL)renameMailboxes:(id)fp8 to:(id)fp12;	// IMP=0x30bafcc9
+ (void)scheduleCommitOnMainThread;	// IMP=0x30bab9e1
+ (void)sendMessagesForStatement:(struct sqlite3_stmt *)fp8 db:(struct sqlite3 *)fp12 to:(id)fp16 options:(unsigned int)fp20;	// IMP=0x30bae19d
+ (void)sendMessagesMatchingCriterion:(id)fp8 to:(id)fp12 options:(unsigned int)fp16;	// IMP=0x30baed2d
+ (void)sendMessagesMatchingCriterion:(id)fp8 to:(id)fp12 options:(unsigned int)fp16 range:(struct _NSRange)fp20;	// IMP=0x30bace7d
+ (void)sendMessagesMatchingQuery:(const char *)fp8 to:(id)fp12 options:(unsigned int)fp16;	// IMP=0x30bb1711
+ (void)setBusyTimeoutInterval:(double)fp8;	// IMP=0x30bad305
+ (void)setData:(id)fp8 forMessage:(id)fp12 isPartial:(BOOL)fp16;	// IMP=0x30baccdd
+ (void)setDatabasePath:(id)fp8;	// IMP=0x30bad265
+ (void)setFlags:(unsigned long)fp8 forMessage:(id)fp12;	// IMP=0x30bb17e1
+ (void)setFlagsForMessages:(id)fp8;	// IMP=0x30babbcd
+ (void)setFlagsForMessages:(id)fp8 mask:(unsigned long)fp12;	// IMP=0x30bb0405
+ (id)setFlagsFromDictionary:(id)fp8 forMessages:(id)fp12;	// IMP=0x30bb09b9
+ (void)setMessage:(id)fp8 isPartial:(BOOL)fp12;	// IMP=0x30bb0a1d
+ (void)setNumberOfAttachments:(unsigned int)fp8 isSigned:(BOOL)fp12 isEncrypted:(BOOL)fp16 forMessage:(id)fp20;	// IMP=0x30bb09d9
+ (void)setSummary:(id)fp8 forMessage:(id)fp12;	// IMP=0x30baf831
+ (void)setThreadPriority:(int)fp8;	// IMP=0x30bac1f9
+ (BOOL)shouldCancel;	// IMP=0x30bac859
+ (void)synchronouslyCommitTransaction;	// IMP=0x30bafe69
+ (int)threadPriority;	// IMP=0x30bac261
+ (unsigned int)totalCountForMailbox:(id)fp8;	// IMP=0x30bac611
+ (unsigned int)unreadCountForMailbox:(id)fp8;	// IMP=0x30bac5b1
+ (unsigned int)updateSequenceNumber;	// IMP=0x30bac2c5
+ (id)urlForMailboxID:(unsigned int)fp8;	// IMP=0x30bac719

@end

